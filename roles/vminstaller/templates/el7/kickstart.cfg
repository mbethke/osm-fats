###
### EL7 Kickstart File
### --------------------
### Author : Toshaan Bharvani <toshaan@vantosh.com>
### (c) copyright VanTosh 2014
### BSD License
###

# config
install
#cmdline
skipx
reboot
url --url={{ location }}

# authentication
auth  --useshadow  --passalgo=sha512
rootpw --iscrypted {{ rootpwd }}
firewall --enabled --service=ssh
selinux --enforcing

# localasation
lang {{ language }}
keyboard {{ keyboard }}
timezone --isUtc --nontp {{ timezone }}

# network
{% for nic in nics %}
{# network --device={{ nic.device }} --onboot="{{ nic.onboot }}" --bootproto={{ nic.bootproto }} {% if nic.bootproto == 'static' %} --ip={{ nic.ip }} --netmask={{ nic.netmask }} {% if nic.gateway is defined %}--gateway={{ nic.gateway }}{% else %}--nodefroute{% endif %} {% if nic.nameserver is defined %}--nameserver={{ nic.nameserver }}{% else %}--nodns{% endif %} #}
network --device={{ nic.device }} --onboot={{ nic.onboot }} --bootproto={{ nic.bootproto }} {% if nic.bootproto == 'static' %} --ip={{ nic.ip }} --netmask={{ nic.netmask }} {% if nic.gateway is defined -%}--gateway={{ nic.gateway }}{% else %}--nodefroute{% endif %} {% if nic.nameserver is defined -%}--nameserver={{ nic.nameserver }}{% else %}--nodns{% endif %}

{% endif %}
{% endfor %}

{% if iscsi is defined %}
{% for iscsi in iscsi %}
iscsiname {{ iscsi.iqnname }}
iscsi --ipaddr={{ iscsi.server }} --port=3260 --user={{ iscsi.username }} --password={{ iscsi.password }}
{% endfor %}
{% endif %}

# partition
zerombr
clearpart --all --initlabel
{% for partition in partitions %}
{{ partition }}
{% endfor %}
{{ bootloader }}

# first booting
firstboot --disable
logging --level=info
reboot

# repositories
{% for repo in repos %}
repo --name={{ repo.name }}  --baseurl={{ repo.uri }} --cost={{ repo.cost }}
{% endfor %}

# package selection
%packages --nobase --excludedocs
@core
wget
nano
audit
dos2unix
sgpio
yum-presto
yum-utils
sendmail
libselinux-python
bridge-utils
cpufrequtils
ncurses-term
star
openssh-clients
net-tools
iptables-services
policycoreutils-python
deltarpm
firewalld
firewall-config
-kexec-tools
-postfix
-plymouth
-autofs
-NetworkManager
-NetworkManager-tui
-NetworkManager-glib
-b43-fwcutter
-biosdevname
-eject
-fprintd
-fprintd-pam
-kexec-tools
-rfkill
-systemtap-runtime
-tcsh
-mksh
-wireless-tools
-abrt-cli
-abrt-addon-kerneloops
-abrt-addon-ccpp
-abrt-addon-python
-abrt-addon-vmcore
-abrt-desktop
-abrt-console-notification
-iwl5150-firmware
-atmel-firmware
-iwl6000-firmware
-ipw2200-firmware
-rt73usb-firmware
-iwl6000g2a-firmware
-ipw2100-firmware
-iwl1000-firmware
-ivtv-firmware
-iwl3945-firmware
-iwl6050-firmware
-libertas-usb8388-firmware
-iwl5000-firmware
-iwl4965-firmware
-iwl7265-firmware
-zd1211-firmware
-iwl100-firmware
-ql2400-firmware
-ql2100-firmware
-ql2500-firmware
-rt61pci-firmware
-ql2200-firmware
-bfa-firmware
-aic94xx-firmware
-iwl100-firmware
-ql23xx-firmware
-iw
-xorg-x11-drv-ati-firmware
-zd1211-firmware
-system-config-firewall-base
-iscsi-initiator-utils
-iwl6000g2b-firmware
-iwl7260-firmware
-iwl2030-firmware
-iwl105-firmware
-libertas-sd8686-firmware
-iwl3160-firmware
-iwl2000-firmware
-iwl135-firmware
-libertas-sd8787-firmware
-virt-what
-iprutils
-ModemManager-glib
{% if iscsi is not defined %}
-iscsi-initiator-utils
{% else %}
iscsi-initiator-utils
device-mapper-multipath
dracut-network
{% endif %}
%end

%addon com_redhat_kdump --disable
%end

# post script
%post --log=/root/post-ks-log
#
/usr/bin/ssh-keygen -q -b {{ sshdrsakeylength }} -t rsa -f /etc/ssh/ssh_host_rsa_key -C '' -N ''
/usr/bin/ssh-keygen -q -b {{ sshdecdsakeylength }} -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -C '' -N ''
#/usr/bin/ssh-keygen -q -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -C '' -N ''
/bin/sed 's/\#Port\ 22/Port\ {{ ansible_port }}/' -i /etc/ssh/sshd_config
/bin/sed 's/\#LogLevel\ INFO/LogLevel\ INFO/' -i /etc/ssh/sshd_config
/bin/sed 's/\#LoginGraceTime\ 2m/LoginGraceTime\ 1m/' -i /etc/ssh/sshd_config
/bin/sed 's/\#PermitRootLogin\ yes/PermitRootLogin\ no/' -i /etc/ssh/sshd_config
/bin/sed 's/\#StrictModes\ yes/StrictModes\ yes/' -i /etc/ssh/sshd_config
/bin/sed 's/\#MaxAuthTries\ 6/MaxAuthTries\ 3/' -i /etc/ssh/sshd_config
/bin/sed 's/\#MaxSessions\ 10/MaxSessions\ 10/' -i /etc/ssh/sshd_config
/bin/sed 's/\#RSAAuthentication\ yes/RSAAuthentication\ yes/' -i /etc/ssh/sshd_config
/bin/sed 's/\#PubkeyAuthentication\ yes/PubkeyAuthentication\ yes/' -i /etc/ssh/sshd_config
/bin/sed 's/\#PermitEmptyPasswords\ no/PermitEmptyPasswords\ no/' -i /etc/ssh/sshd_config
/bin/sed 's/\#GSSAPIAuthentication\ no/GSSAPIAuthentication\ no/' -i /etc/ssh/sshd_config
/bin/sed 's/\GSSAPIAuthentication\ yes/\#GSSAPIAuthentication\ yes/' -i /etc/ssh/sshd_config
/bin/sed 's/UsePAM\ yes/UsePAM\ yes\nAllowUsers\ ansible/' -i /etc/ssh/sshd_config
/bin/sed 's/\#Banner\ none/Banner\ \/etc\/ssh\/banner/' -i /etc/ssh/sshd_config
#
/bin/sed 's/PROMPT=yes/PROMPT=no/' -i /etc/sysconfig/init
/bin/sed 's/SINGLE=\/sbin\/sushell/SINGLE=\/sbin\/sulogin/' -i /etc/sysconfig/init
{% if graphics is defined %}
/sbin/grubby --update-kernel=ALL --args="printk.time=1 panic=15 elevator=noop"
{% else %}
/bin/sed 's/ACTIVE_CONSOLES\=\/dev\/tty\[1\-6\]/ACTIVE_CONSOLES\=/' -i /etc/sysconfig/init
/sbin/grubby --update-kernel=ALL --remove-args="rhgb quiet" --args="printk.time=1 console={{ virtconsole }},115200 no_console_suspend panic=15 elevator=noop"
{% endif %}
#
/bin/cat << 'EOF' > /etc/init/control-alt-delete.conf
start on control-alt-delete
exec echo "Control-Alt-Delete pressed"
EOF
#
/usr/sbin/userdel shutdown
/usr/sbin/userdel halt
/usr/sbin/userdel games
/usr/sbin/userdel operator
/usr/sbin/userdel ftp
/usr/sbin/userdel gopher
#
/usr/sbin/groupadd -g 999999 ansible
/usr/sbin/useradd -u 999999 -g 999999 ansible
/bin/mkdir /home/ansible/.ssh/
/bin/chmod 700 /home/ansible/.ssh/
/bin/cat << 'EOF' > /home/ansible/.ssh/authorized_keys
{{ sshpubkey }}EOF
/bin/chmod 600 /home/ansible/.ssh/authorized_keys
/bin/chown ansible.ansible -R /home/ansible/.ssh/
/usr/bin/chcon -R -t ssh_home_t /home/ansible/.ssh/
#
/bin/cat << 'EOF' > /etc/ssh/banner
+---------------------------------------------------------------------+
|         #     #               #######                               |
|         #     #   ##   #    #    #     ####   ####  #    #          |
|         #     #  #  #  ##   #    #    #    # #      #    #          |
|         #     # #    # # #  #    #    #    #  ####  ######          |
|          #   #  ###### #  # #    #    #    #      # #    #          |
|           # #   #    # #   ##    #    #    # #    # #    #          |
|            #    #    # #    #    #     ####   ####  #    #          |
+---------------------------------------------------------------------+
|   This system is for the use of authorized users only.  Usage of    |
|   this system may be monitored and recorded by system personnel.    |
|   Anyone using this system expressly consents to such monitoring    |
|   and is advised that if such monitoring reveals possible           |
|   evidence of criminal activity, system personnel may provide the   |
|   evidence from such monitoring to law enforcement officials.       |
+---------------------------------------------------------------------+
Press <Ctrl-C> if you do not agree or if you are not an authorized user.
EOF
#
/bin/cat << 'EOF' > /etc/sysconfig/iptables
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT

### SSH
-A INPUT -m state --state NEW -m tcp -p tcp --dport {{ ansible_port }} -j LOG --log-prefix "*SSH*: "
-A INPUT -m state --state NEW -m tcp -p tcp --dport {{ ansible_port }} -j ACCEPT
-A INPUT -m state --state NEW -m limit --limit 1/m --limit-burst 3 -p tcp --dport {{ ansible_port }} --syn -j ACCEPT
-A INPUT -p tcp --dport {{ ansible_port }} --syn -j DROP

-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
EOF
/usr/bin/rpm -e firewalld firewall-config
/usr/bin/systemctl enable iptables
#
/bin/cat << 'EOF' > /etc/sudoers.d/ansible
Defaults:ansible !requiretty
ansible     ALL=(ALL)       NOPASSWD: ALL
EOF
/bin/chmod 440 /etc/sudoers.d/ansible
#
/sbin/semanage port -a -t ssh_port_t -p tcp {{ ansible_port }}
#
#rpm -e NetworkManager NetworkManager-tui NetworkManager-glib
rpm -e NetworkManager NetworkManager-team NetworkManager-libnm
%end
